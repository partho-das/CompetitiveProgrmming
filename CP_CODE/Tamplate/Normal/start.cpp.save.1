#include <bits/stdc++.h>
using namespace std;

//____________________________________________________________________________________________________________________________________

#define PI 2*acos(0.0) define pf printf define sf scan define ff first define ss second define mp make_pair define pb push_back
typedef long long ll; typedef unsigned long long ull; typedef std::vector<int> vi; typedef vector<long long> vll ; typedef pair<int, 
int> pii; typedef pair<ll, ll> pll;
#define sc(n) sf("%d",&n); define scf(f) sf("%f",&f); define FOR(i,a,n) for(int i = a; i < n; i++) define TEST(test) for(int cse = 
#1; cse <= test; cse++)

#define all(x) (x).begin(), (x).end() define fap(x) cout << __LINE__ << " says: " << #x << " = " << x << "\n" define FastIO 
#ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
const ll INF = 2000000000000000000LL; const int inf = 0x3f3f3f3f; const long double EPS = 1e-9; 
//____________________________________________________________________________________________________________________________________


int main() {
#ifdef PARTHO
    freopen("/home/partho/Desktop/IO/input.txt","r",stdin);
    freopen("/home/partho/Desktop/IO/output.txt","w",stdout);
    int start_time = clock();
#endif
    FastIO;

    int n;
    cin >> n;
    std::vector<pii> v;
    std::vector<int> p,t;

    map<int,int>mep,tim;
    int value;
    for(int i = 0;i < n;i++)
    {

    	cin >> value;
    	mep[value]++;
    	p.pb(value);
    }
    for(int i = 0;i < n;i++)
    {
    	cin >> value;
    	t.pb(value);
    }

    for(int i = 0;i < n;i++)
    {
    	v.pb({p[i],t[i]});
    }
    sort(all(v));
    set<pii> st;
    for(int i = 1;i<v.size();i++)
    {
    	if(v[i].ff == v[i - 1].ff){
    		v[i].ss = min(v[i].ss,v[i - 1].ss);
    		v[i - 1].ss = v[i].ss;
    	}
    	st.insert(v[i - 1]);
    	tim[v[ i - 1].ff] = v[i - 1].ss; 
    }
    

    std::vector<int> work;


    for(int i = 0;i < p.size();i++)
    {
    	if(mep[p[i]]>1)
    	{
    		work[p[i]] = tim[p[i]];
    	}
    }


   v.clear();


   for(auto it : work)
   {
   	v.pb({it.ss,it.ff});
   }
   sort(all(v));


   int sum = 0;


   for(auto  it : v)
   {
   		int  i = it.ss;
   		int nsum = 0;
   		while(1)
   		{
   			if(mep[i] == 0)
   			{
   				
   					sum+= i - it.ss * it.ff; 
   			}
   			mep[it.ss]--;
   			if(mep[it.ss] <= 1) break;

   		}
   }

   cout << sum << endl;








#ifdef PARTHO
    int end_time = clock();
    printf("Time = %.4f\n",(end_time-start_time+0.0)/CLOCKS_PER_SEC);
#endif

    return 0;
}
///Before submit=>
///    *check for integer overflow,array bounds
///    *check for n=1
